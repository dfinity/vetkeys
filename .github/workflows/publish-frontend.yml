name: Publish @dfinity/vetkeys NPM package

on:
  # Triggered by git tag push
  push:
    tags:
      - 'frontend/@dfinity/vetkeys/*'

jobs:
  publish:
    if: startsWith(github.ref, 'refs/tags/frontend/@dfinity/vetkeys/')
    environment: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - name: Extract and validate version from branch name
        run: |
          # Get the full tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # Extract just the version number for validation
          VERSION_NUMBER="${TAG_NAME#frontend/@dfinity/vetkeys/}"
          # Validate version format
          if ! [[ $VERSION_NUMBER =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version '$VERSION_NUMBER' does not follow the required format vx.y.z"
            exit 1
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV
      - name: Verify package.json version
        run: |
          cd frontend/ic_vetkeys
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$PACKAGE_VERSION" != "${VERSION_NUMBER#v}" ]; then
            echo "Error: Package.json version ($PACKAGE_VERSION) does not match release version (${VERSION_NUMBER#v})"
            exit 1
          fi
      - run: |
          npm install
          cd frontend/ic_vetkeys
          npm list
          npm run build
          npm audit
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
