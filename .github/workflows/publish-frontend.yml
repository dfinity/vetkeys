name: Publish and Release Frontend

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  publish:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/frontend/@dfinity/vetkeys')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          registry-url: 'https://registry.npmjs.org'
      - name: Extract and validate version from branch name
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          # Get the full tag name (everything after release/)
          VERSION_TAG="${BRANCH#release/}"
          # Extract just the version number for validation
          VERSION_NUMBER="${VERSION_TAG#frontend/@dfinity/vetkeys/}"
          # Validate version format
          if ! [[ $VERSION_NUMBER =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version '$VERSION_NUMBER' does not follow the required format vx.y.z"
            exit 1
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV
      - name: Verify package.json version
        run: |
          cd frontend/ic_vetkeys
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$PACKAGE_VERSION" != "${VERSION_NUMBER#v}" ]; then
            echo "Error: Package.json version ($PACKAGE_VERSION) does not match release version (${VERSION_NUMBER#v})"
            exit 1
          fi
      - name: Mark as Latest Release in GitHub Releases
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          gh release edit "${{ env.VERSION_TAG }}" --draft=false --prerelease=false --latest=true
      - run: |
          cd frontend/ic_vetkeys
          npm list
          npm run build
          npm audit
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  delete_release_branch:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Delete release branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin --delete ${{ env.BRANCH }}